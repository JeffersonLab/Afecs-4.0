<!--
  ~   Copyright (c) 2016.  Jefferson Lab (JLab). All rights reserved. Permission
  ~   to use, copy, modify, and distribute  this software and its documentation for
  ~   educational, research, and not-for-profit purposes, without fee and without a
  ~   signed licensing agreement.
  ~
  ~   IN NO EVENT SHALL JLAB BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL
  ~   INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS, ARISING
  ~   OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF JLAB HAS
  ~   BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  ~
  ~   JLAB SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
  ~   THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
  ~   PURPOSE. THE CLARA SOFTWARE AND ACCOMPANYING DOCUMENTATION, IF ANY,
  ~   PROVIDED HEREUNDER IS PROVIDED "AS IS". JLAB HAS NO OBLIGATION TO PROVIDE
  ~   MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
  ~
  ~   This software was developed under the United States Government license.
  ~   For more information contact author at gurjyan@jlab.org
  ~   Department of Experimental Nuclear Physics, Jefferson Lab.
  -->

<rdf:RDF
        xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
        xmlns:cool="http://AFECSHOMEDB/schema/cool#" >

    <!--DO NOT MODIFY... CRITICAL STATE MACHINE CONFIGURATION!-->
    <!---->
    <rdf:Description rdf:about="http://AFECSHOMEDB/Service/CodaRC/CodaRcStartRun#CodaRcStartRun">
        <cool:hasName>CodaRcStartRun</cool:hasName>
        <cool:hasDescription>Coda start run</cool:hasDescription>
        <cool:startsStatemachine rdf:resource="#RC_StartRun"/>
    </rdf:Description>

    <cool:Rule rdf:ID="RC_StartRun">
        <!--used for supervisor final state definition '+ed'-->
        <cool:hasName>active</cool:hasName>
        <cool:hasDescription>Description of the Coda start run service</cool:hasDescription>
        <cool:hasCode>

      <!-- download -->
            if (type_EMU in_state configured)  {
            type_EMU move_to downloaded;
            } elseif (type_USER in_state configured)  {
            type_USER move_to downloaded;
            } elseif (type_SLC in_state configured)  {
            type_SLC move_to downloaded;
            } elseif (type_WNC in_state configured)  {
            type_WNC move_to downloaded;
            } elseif (type_ER in_state configured)  {
            type_ER move_to downloaded;
            } elseif (type_CDEB in_state configured) {
            type_CDEB move_to downloaded;
            } elseif (type_ROC in_state configured) {
            type_ROC move_to downloaded;
            } elseif (type_TS in_state configured) {
            type_TS move_to downloaded;
            }

            if ( (type_EMU in_state downloaded) &amp;&amp; (type_USER not_in_state downloaded)  )  {
            type_USER move_to downloaded;
            } elseif ( (type_USER in_state downloaded) &amp;&amp; (type_SLC not_in_state downloaded)  )  {
            type_SLC move_to downloaded;
            } elseif ( (type_SLC in_state downloaded) &amp;&amp; (type_WNC not_in_state downloaded)  )  {
            type_WNC move_to downloaded;
            } elseif ( (type_WNC in_state downloaded) &amp;&amp; (type_ER not_in_state downloaded)  )  {
            type_ER move_to downloaded;
            } elseif ( (type_ER in_state downloaded) &amp;&amp; (type_CDEB not_in_state downloaded)  )  {
            type_CDEB move_to downloaded;
            } elseif ( (type_CDEB in_state downloaded) &amp;&amp; (type_ROC not_in_state downloaded)  )  {
            type_ROC move_to downloaded;
            } elseif ( (type_ROC in_state downloaded) &amp;&amp; (type_TS not_in_state downloaded)  )  {
            type_TS move_to downloaded;
            }

            if ( (type_USER in_state downloaded) &amp;&amp; (type_SLC not_in_state downloaded)  )  {
            type_SLC move_to downloaded;
            } elseif ( (type_SLC in_state downloaded) &amp;&amp; (type_WNC not_in_state downloaded)  )  {
            type_WNC move_to downloaded;
            } elseif ( (type_WNC in_state downloaded) &amp;&amp; (type_ER not_in_state downloaded)  )  {
            type_ER move_to downloaded;
            } elseif ( (type_ER in_state downloaded) &amp;&amp; (type_CDEB not_in_state downloaded)  )  {
            type_CDEB move_to downloaded;
            } elseif ( (type_CDEB in_state downloaded) &amp;&amp; (type_ROC not_in_state downloaded)  )  {
            type_ROC move_to downloaded;
            } elseif ( (type_ROC in_state downloaded) &amp;&amp; (type_TS not_in_state downloaded)  )  {
            type_TS move_to downloaded;
            }

            if ( (type_SLC in_state downloaded) &amp;&amp; (type_WNC not_in_state downloaded)  )  {
            type_WNC move_to downloaded;
            } elseif ( (type_WNC in_state downloaded) &amp;&amp; (type_ER not_in_state downloaded)  )  {
            type_ER move_to downloaded;
            } elseif ( (type_ER in_state downloaded) &amp;&amp; (type_CDEB not_in_state downloaded)  )  {
            type_CDEB move_to downloaded;
            } elseif ( (type_CDEB in_state downloaded) &amp;&amp; (type_ROC not_in_state downloaded)  )  {
            type_ROC move_to downloaded;
            } elseif ( (type_ROC in_state downloaded) &amp;&amp; (type_TS not_in_state downloaded)  )  {
            type_TS move_to downloaded;
            }

            if ( (type_WNC in_state downloaded) &amp;&amp; (type_ER not_in_state downloaded)  )  {
            type_ER move_to downloaded;
            } elseif ( (type_ER in_state downloaded) &amp;&amp; (type_CDEB not_in_state downloaded)  )  {
            type_CDEB move_to downloaded;
            } elseif ( (type_CDEB in_state downloaded) &amp;&amp; (type_ROC not_in_state downloaded)  )  {
            type_ROC move_to downloaded;
            } elseif ( (type_ROC in_state downloaded) &amp;&amp; (type_TS not_in_state downloaded)  )  {
            type_TS move_to downloaded;
            }

            if ( (type_ER in_state downloaded) &amp;&amp; (type_CDEB not_in_state downloaded)  )  {
            type_CDEB move_to downloaded;
            } elseif ( (type_CDEB in_state downloaded) &amp;&amp; (type_ROC not_in_state downloaded)  )  {
            type_ROC move_to downloaded;
            } elseif ( (type_ROC in_state downloaded) &amp;&amp; (type_TS not_in_state downloaded)  )  {
            type_TS move_to downloaded;
            }

            if ( (type_CDEB in_state downloaded) &amp;&amp; (type_ROC not_in_state downloaded)  )  {
            type_ROC move_to downloaded;
            } elseif ( (type_ROC in_state downloaded) &amp;&amp; (type_TS not_in_state downloaded)  )  {
            type_TS move_to downloaded;
            }

            if ( (type_ROC in_state downloaded) &amp;&amp; (type_TS not_in_state downloaded)  )  {
            type_TS move_to downloaded;
            }


            <!-- prestart -->
            if (type_EMU in_state downloaded)  {
            type_EMU move_to prestarted;
            } elseif (type_USER in_state downloaded)  {
            type_USER move_to prestarted;
            } elseif (type_SLC in_state downloaded)  {
            type_SLC move_to prestarted;
            } elseif (type_WNC in_state downloaded)  {
            type_WNC move_to prestarted;
            } elseif (type_ER in_state downloaded)  {
            type_ER move_to prestarted;
            } elseif (type_CDEB in_state downloaded) {
            type_CDEB move_to prestarted;
            } elseif (type_ROC in_state downloaded) {
            type_ROC move_to prestarted;
            } elseif (type_TS in_state downloaded) {
            type_TS move_to prestarted;
            }

            if ( (type_EMU in_state paused) &amp;&amp; (type_USER not_in_state paused)  )  {
            type_USER move_to prestarted;
            } elseif ( (type_USER in_state paused) &amp;&amp; (type_SLC not_in_state paused)  )  {
            type_SLC move_to prestarted;
            } elseif ( (type_SLC in_state paused) &amp;&amp; (type_WNC not_in_state paused)  )  {
            type_WNC move_to prestarted;
            } elseif ( (type_WNC in_state paused) &amp;&amp; (type_ER not_in_state paused)  )  {
            type_ER move_to prestarted;
            } elseif ( (type_ER in_state paused) &amp;&amp; (type_CDEB not_in_state paused)  )  {
            type_CDEB move_to prestarted;
            } elseif ( (type_CDEB in_state paused) &amp;&amp; (type_ROC not_in_state paused)  )  {
            type_ROC move_to prestarted;
            } elseif ( (type_ROC in_state paused) &amp;&amp; (type_TS not_in_state paused)  )  {
            type_TS move_to prestarted;
            }

            if ( (type_USER in_state paused) &amp;&amp; (type_SLC not_in_state paused)  )  {
            type_SLC move_to prestarted;
            } elseif ( (type_SLC in_state paused) &amp;&amp; (type_WNC not_in_state paused)  )  {
            type_WNC move_to prestarted;
            } elseif ( (type_WNC in_state paused) &amp;&amp; (type_ER not_in_state paused)  )  {
            type_ER move_to prestarted;
            } elseif ( (type_ER in_state paused) &amp;&amp; (type_CDEB not_in_state paused)  )  {
            type_CDEB move_to prestarted;
            } elseif ( (type_CDEB in_state paused) &amp;&amp; (type_ROC not_in_state paused)  )  {
            type_ROC move_to prestarted;
            } elseif ( (type_ROC in_state paused) &amp;&amp; (type_TS not_in_state paused)  )  {
            type_TS move_to prestarted;
            }

            if ( (type_SLC in_state paused) &amp;&amp; (type_WNC not_in_state paused)  )  {
            type_WNC move_to prestarted;
            } elseif ( (type_WNC in_state paused) &amp;&amp; (type_ER not_in_state paused)  )  {
            type_ER move_to prestarted;
            } elseif ( (type_ER in_state paused) &amp;&amp; (type_CDEB not_in_state paused)  )  {
            type_CDEB move_to prestarted;
            } elseif ( (type_CDEB in_state paused) &amp;&amp; (type_ROC not_in_state paused)  )  {
            type_ROC move_to prestarted;
            } elseif ( (type_ROC in_state paused) &amp;&amp; (type_TS not_in_state paused)  )  {
            type_TS move_to prestarted;
            }

            if ( (type_WNC in_state paused) &amp;&amp; (type_ER not_in_state paused)  )  {
            type_ER move_to prestarted;
            } elseif ( (type_ER in_state paused) &amp;&amp; (type_CDEB not_in_state paused)  )  {
            type_CDEB move_to prestarted;
            } elseif ( (type_CDEB in_state paused) &amp;&amp; (type_ROC not_in_state paused)  )  {
            type_ROC move_to prestarted;
            } elseif ( (type_ROC in_state paused) &amp;&amp; (type_TS not_in_state paused)  )  {
            type_TS move_to prestarted;
            }

            if ( (type_ER in_state paused) &amp;&amp; (type_CDEB not_in_state paused)  )  {
            type_CDEB move_to prestarted;
            } elseif ( (type_CDEB in_state paused) &amp;&amp; (type_ROC not_in_state paused)  )  {
            type_ROC move_to prestarted;
            } elseif ( (type_ROC in_state paused) &amp;&amp; (type_TS not_in_state paused)  )  {
            type_TS move_to prestarted;
            }

            if ( (type_CDEB in_state paused) &amp;&amp; (type_ROC not_in_state paused)  )  {
            type_ROC move_to prestarted;
            } elseif ( (type_ROC in_state paused) &amp;&amp; (type_TS not_in_state paused)  )  {
            type_TS move_to prestarted;
            }

            if ( (type_ROC in_state paused) &amp;&amp; (type_TS not_in_state paused)  )  {
            type_TS move_to prestarted;
            }


            <!-- go -->
            if (type_EMU in_state paused)  {
            type_EMU move_to active;
            } elseif (type_USER in_state paused)  {
            type_USER move_to active;
            } elseif (type_SLC in_state paused)  {
            type_SLC move_to active;
            } elseif (type_WNC in_state paused)  {
            type_WNC move_to active;
            } elseif (type_ER in_state paused)  {
            type_ER move_to active;
            } elseif (type_CDEB in_state paused) {
            type_CDEB move_to active;
            } elseif (type_ROC in_state paused) {
            type_ROC move_to active;
            } elseif (type_TS in_state paused) {
            type_TS move_to active;
            }

            if ( (type_EMU in_state active) &amp;&amp; (type_USER not_in_state active)  )  {
            type_USER move_to active;
            } elseif ( (type_USER in_state active) &amp;&amp; (type_SLC not_in_state active)  )  {
            type_SLC move_to active;
            } elseif ( (type_SLC in_state active) &amp;&amp; (type_WNC not_in_state active)  )  {
            type_WNC move_to active;
            } elseif ( (type_WNC in_state active) &amp;&amp; (type_ER not_in_state active)  )  {
            type_ER move_to active;
            } elseif ( (type_ER in_state active) &amp;&amp; (type_CDEB not_in_state active)  )  {
            type_CDEB move_to active;
            } elseif ( (type_CDEB in_state active) &amp;&amp; (type_ROC not_in_state active)  )  {
            type_ROC move_to active;
            } elseif ( (type_ROC in_state active) &amp;&amp; (type_TS not_in_state active)  )  {
            type_TS move_to active;
            }

            if ( (type_USER in_state active) &amp;&amp; (type_SLC not_in_state active)  )  {
            type_SLC move_to active;
            } elseif ( (type_SLC in_state active) &amp;&amp; (type_WNC not_in_state active)  )  {
            type_WNC move_to active;
            } elseif ( (type_WNC in_state active) &amp;&amp; (type_ER not_in_state active)  )  {
            type_ER move_to active;
            } elseif ( (type_ER in_state active) &amp;&amp; (type_CDEB not_in_state active)  )  {
            type_CDEB move_to active;
            } elseif ( (type_CDEB in_state active) &amp;&amp; (type_ROC not_in_state active)  )  {
            type_ROC move_to active;
            } elseif ( (type_ROC in_state active) &amp;&amp; (type_TS not_in_state active)  )  {
            type_TS move_to active;
            }

            if ( (type_SLC in_state active) &amp;&amp; (type_WNC not_in_state active)  )  {
            type_WNC move_to active;
            } elseif ( (type_WNC in_state active) &amp;&amp; (type_ER not_in_state active)  )  {
            type_ER move_to active;
            } elseif ( (type_ER in_state active) &amp;&amp; (type_CDEB not_in_state active)  )  {
            type_CDEB move_to active;
            } elseif ( (type_CDEB in_state active) &amp;&amp; (type_ROC not_in_state active)  )  {
            type_ROC move_to active;
            } elseif ( (type_ROC in_state active) &amp;&amp; (type_TS not_in_state active)  )  {
            type_TS move_to active;
            }

            if ( (type_WNC in_state active) &amp;&amp; (type_ER not_in_state active)  )  {
            type_ER move_to active;
            } elseif ( (type_ER in_state active) &amp;&amp; (type_CDEB not_in_state active)  )  {
            type_CDEB move_to active;
            } elseif ( (type_CDEB in_state active) &amp;&amp; (type_ROC not_in_state active)  )  {
            type_ROC move_to active;
            } elseif ( (type_ROC in_state active) &amp;&amp; (type_TS not_in_state active)  )  {
            type_TS move_to active;
            }

            if ( (type_ER in_state active) &amp;&amp; (type_CDEB not_in_state active)  )  {
            type_CDEB move_to active;
            } elseif ( (type_CDEB in_state active) &amp;&amp; (type_ROC not_in_state active)  )  {
            type_ROC move_to active;
            } elseif ( (type_ROC in_state active) &amp;&amp; (type_TS not_in_state active)  )  {
            type_TS move_to active;
            }

            if ( (type_CDEB in_state active) &amp;&amp; (type_ROC not_in_state active)  )  {
            type_ROC move_to active;
            } elseif ( (type_ROC in_state active) &amp;&amp; (type_TS not_in_state active)  )  {
            type_TS move_to active;
            }

            if ( (type_ROC in_state active) &amp;&amp; (type_TS not_in_state active)  )  {
            type_TS move_to active;
            }

        </cool:hasCode>
    </cool:Rule>

</rdf:RDF>
